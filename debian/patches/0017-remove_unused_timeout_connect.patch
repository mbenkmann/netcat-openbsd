--- a/netcat.c
+++ b/netcat.c
@@ -158,7 +158,6 @@
 int	local_listen(char *, char *, struct addrinfo);
 void	readwrite(int);
 int	remote_connect(const char *, const char *, struct addrinfo);
-int	timeout_connect(int, const struct sockaddr *, socklen_t);
 int	socks_connect(const char *, const char *, struct addrinfo,
 	    const char *, const char *, struct addrinfo, int, const char *, char*);
 int	udptest(int);
@@ -974,43 +973,6 @@
 	return (s);
 }
 
-int
-timeout_connect(int s, const struct sockaddr *name, socklen_t namelen)
-{
-	struct pollfd pfd;
-	socklen_t optlen;
-	int flags, optval;
-	int ret;
-
-	if (timeout != -1) {
-		flags = fcntl(s, F_GETFL, 0);
-		if (fcntl(s, F_SETFL, flags | O_NONBLOCK) == -1)
-			err(1, "set non-blocking mode");
-	}
-
-	if ((ret = connect(s, name, namelen)) != 0 && errno == EINPROGRESS) {
-		pfd.fd = s;
-		pfd.events = POLLOUT;
-		if ((ret = poll(&pfd, 1, timeout)) == 1) {
-			optlen = sizeof(optval);
-			if ((ret = getsockopt(s, SOL_SOCKET, SO_ERROR,
-			    &optval, &optlen)) == 0) {
-				errno = optval;
-				ret = optval == 0 ? 0 : -1;
-			}
-		} else if (ret == 0) {
-			errno = ETIMEDOUT;
-			ret = -1;
-		} else
-			err(1, "poll failed");
-	}
-
-	if (timeout != -1 && fcntl(s, F_SETFL, flags) == -1)
-		err(1, "restoring flags");
-
-	return (ret);
-}
-
 static int connect_with_timeout(int fd, const struct sockaddr *sa,
 		                socklen_t salen, int ctimeout)
 {
